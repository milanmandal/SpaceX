{"version":3,"sources":["components/missions.js","App.js","reportWebVitals.js","index.js"],"names":["mission","name","fno","ids","year","land","launch","img","className","src","alt","App","useState","info","Setinfo","Setyear","Setlaunch","Setland","useEffect","getevent","a","fetch","res","json","data","window","alert","updateYear","e","target","value","updateLaunch","updateLand","onClick","map","mission_id","flight_number","mission_name","launch_year","launch_success","rocket","first_stage","cores","land_success","links","mission_patch_small","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7fed31fe.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst mission=({name,fno,ids,year,land,launch,img})=>{\r\n\r\n    return(\r\n            <div className=\"card\">\r\n                <div className=\"imgcard\" >\r\n                <img src={img} alt = \"\"></img>\r\n                </div>\r\n                <div>\r\n                <div className=\"det-card\">\r\n                <p className=\"style\">{name} #{fno}</p>\r\n                <p>Mission id: {ids}</p>\r\n                <p>Launch year: {year}</p>\r\n                <p>Successful Launch: {(launch)?\"true\":\"false\"}</p>\r\n                <p>Successfull Landing: {(land)?\"true\":\"false\"}</p>\r\n                </div>\r\n                </div>\r\n                \r\n            </div>\r\n        \r\n    )\r\n\r\n}\r\n{/* <h1>{title}</h1>\r\n            <ul className=\"ingredient\">\r\n                <p >Check if you have these</p>\r\n                {ingredients.map(ingredient => (\r\n                    <li>{ingredient.text}</li>\r\n                ))}\r\n            </ul>\r\n            <p>CALORIES :{calories}s</p>\r\n            <footer>\r\n            <div className=\"card2\">\r\n          <a href={cook}> <button className=\"search-cook\">Start Cooking!!</button></a>\r\n            </div> */}\r\nexport default mission\r\n","import React,{useEffect,useState} from 'react'\nimport Missions from './components/missions'\nimport './App.css'\nconst App=()=> {\n\n  const [info,Setinfo] = useState([]);\n  const [year,Setyear] = useState('0');\n  const [launch,Setlaunch] = useState('true');\n  const [land,Setland] = useState('false');\n  useEffect(()=>{\n    getevent();\n  },[year]);\n\n  const getevent=async()=>{\n    if(year!=0){\n      const res = await fetch(`https://api.spacexdata.com/v3/launches?limit=100&launch_launch=${launch}&launch_land=${land}&launch_year=${year}`) //search page\n      const data = await res.json();\n      (data!=\"\")?Setinfo(data):window.alert(\"NO Missions Found\");\n    }\n    else{\n      const res = await fetch(`https://api.spacexdata.com/v3/launches?limit=100`) //search page\n      const data = await res.json();\n      (data!=\"\")?Setinfo(data):window.alert(\"NO mIssions Found\");\n    }\n      \n  }\n\n  const updateYear =(e)=>{\n    Setyear(e.target.value);\n    getevent();\n  }\n  const updateLaunch =(e)=>{\n    Setlaunch(e.target.value);\n    getevent();\n  }\n  const updateLand =(e)=>{\n    Setland(e.target.value);\n    getevent();\n  }\n\n  return (\n    <div className=\"container\">\n      <h3>SPACEX LAUNCH PROGRAMS</h3>\n      <div className=\"column1\">\n        <div className=\"btn\">\n          <h3>Filters</h3>\n        <p>Launch year</p>\n          <button value=\"2006\" onClick={updateYear}>2006</button>\n          <button value=\"2007\" onClick={updateYear}>2007</button>\n          <button value=\"2008\" onClick={updateYear}>2008</button>\n          <button value=\"2009\" onClick={updateYear}>2009</button>\n          <button value=\"2010\" onClick={updateYear}>2010</button>\n          <button value=\"2011\" onClick={updateYear}>2011</button>\n          <button value=\"2012\" onClick={updateYear}>2012</button>\n          <button value=\"2013\" onClick={updateYear}>2013</button>\n          <button value=\"2014\" onClick={updateYear}>2014</button>\n          <button value=\"2015\" onClick={updateYear}>2015</button>\n          <button value=\"2016\" onClick={updateYear}>2016</button>\n          <button value=\"2017\" onClick={updateYear}>2017</button>\n          <button value=\"2018\" onClick={updateYear}>2018</button>\n          <button value=\"2019\" onClick={updateYear}>2019</button>\n          <button value=\"2020\" onClick={updateYear}>2020</button>\n        <p>Launch Success</p>\n        <div className=\"btn2\">\n        <button value=\"true\" onClick={updateLaunch}>True</button>\n        <button value=\"false\" onClick={updateLaunch}>False</button>\n        </div>\n        <p>Land Success</p>\n        <div className=\"btn3\">\n        <button value=\"true\" onClick={updateLand}>True</button>\n        <button value=\"false\" onClick={updateLand}>False</button>\n        </div>\n        </div>\n      </div>   \n\n      <div className=\"column2\">\n      <div className=\"mission-card\">\n      {\n        info.map(mission =>(\n        <Missions\n        ids = {mission.mission_id} \n        fno = {mission.flight_number} \n        name = {mission.mission_name}\n        year = {mission.launch_year}\n        launch = {mission.launch_success}\n        land = {mission.rocket.first_stage.cores.land_success}\n        img = {mission.links.mission_patch_small}\n        />\n        ))\n      }\n      </div>\n      \n      </div>\n      <footer>\n        <p>Developed by : Milan Mandal</p>\n      </footer>\n\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}